C51 COMPILER V9.60.7.0   ULTIMSTE                                                          11/28/2023 16:34:13 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE ULTIMSTE
OBJECT MODULE PLACED IN .\Objects\ultimste.obj
COMPILER INVOKED BY: E:\Keil C51\C51\BIN\C51.EXE ..\src\ultimste.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\include;..\src) DE
                    -BUG OBJECTEXTEND PRINT(.\Listings\ultimste.lst) OBJECT(.\Objects\ultimste.obj)

line level    source

   1          #include "ultimste.h"
   2          
   3          // ============== LCD1602 ==============
   4          
   5          void LCD1602_Initial(void)
   6          {
   7   1              LCD1602_WriteCmd (Set_8bit_2line_5x7);   // 命令6
   8   1              LCD1602_WriteCmd (Show_CursorOff);       // 命令4
   9   1              LCD1602_WriteCmd (Mode_CursorRightMove); // 命令3
  10   1              LCD1602_WriteCmd (Clear_Screen);         // 命令1                     
  11   1      }
  12          
  13          void LCD1602_ShowString(uchar* s, uint t)
  14          {
  15   1              while (*s)
  16   1              {
  17   2                      LCD1602_WriteData(*s++);
  18   2                      Delay(t);
  19   2              }
  20   1      }
  21          
  22          void LCD1602_ScreenFlicker(uchar num, uint t)
  23          {
  24   1              t >>= 1;
  25   1              while (num--)
  26   1              {
  27   2                      LCD1602_WriteCmd (Show_ScreenOff); // 命令4
  28   2                      Delay(t);
  29   2                      LCD1602_WriteCmd (Show_CursorOff); // 命令4
  30   2                      Delay(t);
  31   2              }
  32   1      }
  33          
  34          void LCD1602_ScreenShiftRight(uchar num, uint t)
  35          {
  36   1              while (num--)
  37   1              {
  38   2                      LCD1602_WriteCmd (Shift_ScreenRight); // 命令5
  39   2                      Delay(t);
  40   2              }
  41   1      }
  42          
  43          // -------------------------------------
  44          
  45          void NumberToString(float num, uchar* str, uchar numLen, uchar decimal)
  46          {
  47   1              char i, mid;
  48   1              uint intn, decn;
  49   1              float dec, std = 0.4;
  50   1              
  51   1              // 确定小数点的位置
  52   1              if (decimal != 0) 
  53   1          {
  54   2              if (decimal + (num<0) + 1 > numLen)
C51 COMPILER V9.60.7.0   ULTIMSTE                                                          11/28/2023 16:34:13 PAGE 2   

  55   2              {
  56   3                  mid = num < 0;
  57   3                  decimal = numLen - 1 - (num < 0);
  58   3              }
  59   2              else mid = numLen - decimal - 1;
  60   2                      str[mid] = '.';
  61   2              }
  62   1              else mid = numLen;
  63   1              
  64   1              // 五舍六入
  65   1              i = decimal;
  66   1              while (i--) std *= 0.1;
  67   1              
  68   1              // 分离整数和小数部分
  69   1              if (num < 0) 
  70   1          {
  71   2                      num -= std;
  72   2                      intn = -(int)num;
  73   2                      dec = (int)num - num;
  74   2              }
  75   1              else 
  76   1              {
  77   2                      num += std;
  78   2                      intn = (int)num;
  79   2                      dec = num - intn;
  80   2              }
  81   1              
  82   1              // 处理小数部分
  83   1              for (i = mid + 1; i < numLen; ++i)
  84   1          {
  85   2                      dec *= 10;
  86   2                      decn = (uchar)dec;
  87   2              str[i] = decn + '0';
  88   2                      dec -= decn;
  89   2              }
  90   1              // 处理整数部分
  91   1              for (i = mid - 1; i > 0; --i)
  92   1          {
  93   2              str[i] = intn % 10 + '0';
  94   2              intn /= 10;
  95   2                      if (intn == 0)
  96   2              {
  97   3                  --i;
  98   3                  break;
  99   3              }
 100   2          }
 101   1              str[i] = num < 0 ? '-' : (intn == 0 && mid != 1 ? ' ' : intn % 10 + '0');
 102   1          while (i-- > 0) str[i] = ' ';
 103   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    816    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      34
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
