C51 COMPILER V9.60.7.0   ULTIMATE                                                          12/04/2023 07:06:34 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE ULTIMATE
OBJECT MODULE PLACED IN .\Objects\ultimate.obj
COMPILER INVOKED BY: E:\Keil C51\C51\BIN\C51.EXE ..\src\ultimate.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\include) DEBUG OBJ
                    -ECTEXTEND PRINT(.\Listings\ultimate.lst) OBJECT(.\Objects\ultimate.obj)

line level    source

   1          #include "ultimate.h"
   2          
   3          #define WELCOME "Welcome to AAUCS"
   4          #define _GROUP_ "      NO.13     "
   5          #define SETTING_NUM 6
   6          
   7          extern uint SHOW_WAIT;
   8          extern bit page_change;
   9          extern char upperLimit, lowerLimit;
  10          extern float temperature;
  11          extern float highest, lowest;
  12          extern uchar fanGear, fanGearStep;
  13          extern uchar hus, hms, hs, hm; // 开机后 超过温度上限 时间
  14          extern uchar lus, lms, ls, lm; // 开机后 低于温度下限 时间
  15          extern uchar key, pressKey, page, option;
  16          extern uchar dsr, ringtoneNum, volume, changeCount;
  17          extern uchar code DC[];
  18          extern uchar numStr[];
  19          
  20          void Delay1ms(uint t) // 12MHz
  21          {                     // 软件延迟 参数用uchar 比uint 精准
  22   1          uchar i;
  23   1          while (t--) // mov dec mov jnz orl jz : 9us
  24   1          {
  25   2              i = 123;    // mov : 1us
  26   2              while (i--) // mov dec mov jz : 6us * 124
  27   2              {
  28   3              } // jmp : 2us * 123
  29   2          }     // 每当低位为 0 会多1us处理高位(dec) 忽略
  30   1      } // (8+1+8*124-2)us * t + ((t/256)+10+6)us 约 t ms
  31          
  32          // ============== LCD1602 ==============
  33          
  34          void LCD1602_ShowString(uchar* s)
  35          {
  36   1          while (*s)
  37   1          {
  38   2              LCD1602_WriteData(*s++);
  39   2              Delay1ms(SHOW_WAIT);
  40   2          }
  41   1      }
  42          
  43          void LCD1602_Action(void)
  44          {
  45   1          uchar i;
  46   1          // 开启 LCD1602 显示 (initial)
  47   1          LCD1602_WriteCmd(Set_8bit_2line_5x7);   // 命令6
  48   1          LCD1602_WriteCmd(Show_CursorOff);       // 命令4
  49   1          LCD1602_WriteCmd(Mode_CursorRightMove); // 命令3
  50   1          LCD1602_WriteCmd(Clear_Screen);         // 命令1
  51   1      
  52   1          // 开机界面
  53   1          LCD1602_WriteCmd(Move_Cursor_Row1_Col(16)); // 命令8 设置光标在显示屏之外
  54   1          LCD1602_ShowString(WELCOME);
C51 COMPILER V9.60.7.0   ULTIMATE                                                          12/04/2023 07:06:34 PAGE 2   

  55   1          SHOW_WAIT = 200;
  56   1          LCD1602_WriteCmd(Move_Cursor_Row2_Col(16)); // 命令8
  57   1          LCD1602_WriteCmd(Mode_ScreenRightMove);     // 命令3
  58   1          LCD1602_ShowString(_GROUP_); // 一边输出第二行 一边移动屏幕
  59   1          LCD1602_WriteCmd(Mode_CursorRightMove); // 命令3  恢复光标自增
  60   1      
  61   1          i = 3;
  62   1          do // 闪烁三次
  63   1          {
  64   2              LCD1602_WriteCmd(Show_ScreenOff); // 命令4
  65   2              Delay1ms(SHOW_WAIT * 2);
  66   2              LCD1602_WriteCmd(Show_CursorOff); // 命令4
  67   2              Delay1ms(SHOW_WAIT * 2);
  68   2          } while (--i);
  69   1          i = 16;
  70   1          do
  71   1          {
  72   2              LCD1602_WriteCmd(Shift_ScreenRight); // 命令5
  73   2              Delay1ms(SHOW_WAIT);
  74   2          } while (--i);                  // 字体移出屏幕
  75   1          LCD1602_WriteCmd(Clear_Screen); // 命令1 清屏
  76   1          SHOW_WAIT = 0;
  77   1      } // LCD1602 Action
  78          
  79          void ShowViewPage_1(void)
  80          {
  81   1          // 第一行 温度上限 温度下限
  82   1          LCD1602_WriteCmd(Clear_Screen); // 命令1 清屏
  83   1          LCD1602_ShowString("H:");
  84   1          Int8ToString(upperLimit, numStr, 3);
  85   1          LCD1602_ShowString(numStr);
  86   1          LCD1602_ShowString(DC);
  87   1          LCD1602_ShowString("  L:");
  88   1          Int8ToString(lowerLimit, numStr, 3);
  89   1          LCD1602_ShowString(numStr);
  90   1          LCD1602_ShowString(DC);
  91   1          // 第二行 温度 风扇档位
  92   1          LCD1602_WriteCmd(Move_Cursor_Row2_Col(0));
  93   1          LCD1602_ShowString("T:");
  94   1          FloatToString(temperature, numStr, 5, 1);
  95   1          LCD1602_ShowString(numStr);
  96   1          LCD1602_ShowString(DC);
  97   1          LCD1602_ShowString("  FAN:");
  98   1          Int8ToString(fanGear, numStr, 1);
  99   1          LCD1602_ShowString(numStr);
 100   1      }
 101          
 102          void ShowViewPage_2(void)
 103          {
 104   1          // 第一行 自开机后的最高温
 105   1          LCD1602_WriteCmd(Clear_Screen); // 命令1 清屏
 106   1          LCD1602_ShowString("Highest: ");
 107   1          UpdateExtremes(1);
 108   1          // 第二行 自开机后的最低温
 109   1          LCD1602_WriteCmd(Move_Cursor_Row2_Col(0));
 110   1          LCD1602_ShowString("Lowest:  ");
 111   1          UpdateExtremes(0);
 112   1      }
 113          
 114          void ShowViewPage_3(void)
 115          {
 116   1          void UpdateOverLimitTimer(bit which);
C51 COMPILER V9.60.7.0   ULTIMATE                                                          12/04/2023 07:06:34 PAGE 3   

 117   1          // 第一行 超过温度上限时长
 118   1          LCD1602_WriteCmd(Clear_Screen); // 命令1 清屏
 119   1          LCD1602_ShowString("Above H:");
 120   1          UpdateOverLimitTimer(1);
 121   1          // 第二行 低于温度下限时长
 122   1          LCD1602_WriteCmd(Move_Cursor_Row2_Col(0));
 123   1          LCD1602_ShowString("Below L:");
 124   1          UpdateOverLimitTimer(0);
 125   1      }
 126          
 127          void ShowViewPage_4(void)
 128          {
 129   1          char KeysSystem_3(void);
 130   1          uchar i;
 131   1          LCD1602_WriteCmd(Clear_Screen); // 命令1 清屏
 132   1          // 第一行 温感分辨率 风扇档位步长 (开机音乐?)
 133   1          LCD1602_WriteCmd(Clear_Screen); // 命令1 清屏
 134   1          LCD1602_ShowString("TR: ");
 135   1          LCD1602_WriteData('0' + dsr);
 136   1          LCD1602_ShowString("   FGS: ");
 137   1          LCD1602_WriteData('0' + fanGearStep);
 138   1          LCD1602_ShowString(DC);
 139   1          // LCD1602_ShowString("  M:");
 140   1          // LCD1602_ShowString();
 141   1          // 第二行 音量
 142   1          LCD1602_WriteCmd(Move_Cursor_Row2_Col(0));
 143   1          LCD1602_ShowString("Volume: ");
 144   1          i = 0;
 145   1          while (i < volume)
 146   1          {
 147   2              LCD1602_WriteData(0xff);
 148   2              ++i;
 149   2          }
 150   1      }
 151          
 152          void ShowSettings(uchar opt)
 153          {
 154   1          char i;
 155   1          uchar sgl[2][2] = {{0x7e, 0x7f}, {' ', ' '}};
 156   1          if (opt == option)
 157   1              return;
 158   1          if ((opt >> 1) != (option >> 1))
 159   1          {
 160   2              LCD1602_WriteCmd(Clear_Screen); // 命令1 清屏
 161   2              switch (opt >> 1)
 162   2              {
 163   3              case 0:
 164   3                  // 0 温度上限
 165   3                  LCD1602_WriteCmd(Move_Cursor_Row1_Col(1));
 166   3                  LCD1602_ShowString("H Limit: ");
 167   3                  Int8ToString(upperLimit, numStr, 3);
 168   3                  LCD1602_ShowString(numStr);
 169   3                  LCD1602_ShowString(DC);
 170   3                  // 1 温度下限
 171   3                  LCD1602_WriteCmd(Move_Cursor_Row2_Col(1));
 172   3                  LCD1602_ShowString("L Limit: ");
 173   3                  Int8ToString(lowerLimit, numStr, 3);
 174   3                  LCD1602_ShowString(numStr);
 175   3                  LCD1602_ShowString(DC);
 176   3                  break;
 177   3              case 1:
 178   3                  // 2 温感分辨率
C51 COMPILER V9.60.7.0   ULTIMATE                                                          12/04/2023 07:06:34 PAGE 4   

 179   3                  LCD1602_WriteCmd(Move_Cursor_Row1_Col(1));
 180   3                  LCD1602_ShowString("TResolution: ");
 181   3                  LCD1602_WriteData('0' + dsr);
 182   3                  // 3 风扇档位步长
 183   3                  LCD1602_WriteCmd(Move_Cursor_Row2_Col(1));
 184   3                  LCD1602_ShowString("FGear' Step: ");
 185   3                  LCD1602_WriteData('0' + fanGearStep);
 186   3                  break;
 187   3              case 2:
 188   3                  // 4 开机铃声
 189   3                  LCD1602_WriteCmd(Move_Cursor_Row1_Col(2));
 190   3                  LCD1602_ShowString("ringtone:  ");
 191   3                  LCD1602_WriteData('0' + ringtoneNum);
 192   3                  // 5 音量
 193   3                  LCD1602_WriteCmd(Move_Cursor_Row2_Col(1));
 194   3                  LCD1602_ShowString("Volume:");
 195   3                  i = 0;
 196   3                  while (i < volume)
 197   3                  {
 198   4                      LCD1602_WriteData(0xff);
 199   4                      ++i;
 200   4                  }
 201   3                  break;
 202   3              }
 203   2          }
 204   1          i = opt & 1;
 205   1          LCD1602_WriteCmd(Move_Cursor_Row1_Col(0));
 206   1          LCD1602_WriteData(sgl[i][0]);
 207   1          LCD1602_WriteCmd(Move_Cursor_Row1_Col(15));
 208   1          LCD1602_WriteData(sgl[i][1]);
 209   1          i = !i;
 210   1          LCD1602_WriteCmd(Move_Cursor_Row2_Col(0));
 211   1          LCD1602_WriteData(sgl[i][0]);
 212   1          LCD1602_WriteCmd(Move_Cursor_Row2_Col(15));
 213   1          LCD1602_WriteData(sgl[i][1]);
 214   1          option = opt;
 215   1      }
 216          
 217          void ChangeSetting(void)
 218          {
 219   1          char i, j;
 220   1          uchar cunt = 24;
 221   1          bit flag = 0;
 222   1          switch (option)
 223   1          {
 224   2          case 0: // 这一段差异性和共性都多，为了节约一点内存，三目运算符 时间换空
             -间
 225   2          case 1: // 这一段逻辑复杂，只用知道是增加/减少上限下限的
 226   2              i = option ? lowerLimit : upperLimit;
 227   2              while (1)
 228   2              {
 229   3                  if (!--cunt)
 230   3                  {
 231   4                      cunt = 24;
 232   4                      flag = !flag;
 233   4                  }
 234   3                  LCD1602_WriteCmd((option ? 0xc0 : 0x80) | 10);
 235   3                  if (flag)
 236   3                      LCD1602_ShowString("   ");
 237   3                  else
 238   3                  {
 239   4                      Int8ToString(i, numStr, 3);
C51 COMPILER V9.60.7.0   ULTIMATE                                                          12/04/2023 07:06:34 PAGE 5   

 240   4                      LCD1602_ShowString(numStr);
 241   4                  }
 242   3                  switch (KeysSystem_3())
 243   3                  {
 244   4                  case 2:
 245   4                      if (option)
 246   4                          lowerLimit = i;
 247   4                      else
 248   4                          upperLimit = i;
 249   4                  case -2: // 可能会因为时序造成空白 所以要
 250   4                      LCD1602_WriteCmd((option ? 0xc0 : 0x80) | 10);
 251   4                      Int8ToString(option ? lowerLimit : upperLimit, numStr, 3);
 252   4                      LCD1602_ShowString(numStr); // 刷新一下数据
 253   4                      return;
 254   4                  case -1:
 255   4                      if (i > -55 && ((i > lowerLimit + 1) || option))
 256   4                          --i;
 257   4                      break;
 258   4                  case 1:
 259   4                      if (i < 127 && ((i < upperLimit - 1) || !option))
 260   4                          ++i;
 261   4                      break;
 262   4                  }
 263   3              }
 264   2          case 4: // 这一部分代码几乎一样，就复用了用来增大/减小选项值
 265   2              i = ringtoneNum; // 0 - 3
 266   2          case 3:
 267   2              if (option == 3)
 268   2                  i = fanGearStep; // 0 - 7
 269   2          case 2:
 270   2              if (option == 2)
 271   2                  i = dsr; // 0 - 3
 272   2              LCD1602_WriteCmd((option & 1 ? 0xc0 : 0x80) | (option == 4 ? 14 : 15));
 273   2              while (1)
 274   2              {
 275   3                  if (!--cunt)
 276   3                  {
 277   4                      cunt = 24;
 278   4                      flag = !flag;
 279   4                  }
 280   3                  if (flag)
 281   3                      j = ' ';
 282   3                  else
 283   3                      j = '0' + i;
 284   3                  LCD1602_WriteCmd(Shift_CursorLeft);
 285   3                  LCD1602_WriteData(j);
 286   3                  switch (KeysSystem_3())
 287   3                  {
 288   4                  case 2:
 289   4                      if (option == 4)
 290   4                          ringtoneNum = i;
 291   4                      else if (option == 3)
 292   4                          fanGearStep = i;
 293   4                      else if (option == 2)
 294   4                          dsr = i;
 295   4                  case -2:
 296   4                      j = option == 4 ? ringtoneNum : (option == 3 ? fanGearStep : dsr);
 297   4                      LCD1602_WriteCmd(Shift_CursorLeft);
 298   4                      LCD1602_WriteData(j + '0');
 299   4                      return;
 300   4                  case -1:
 301   4                      if (i > 0)
C51 COMPILER V9.60.7.0   ULTIMATE                                                          12/04/2023 07:06:34 PAGE 6   

 302   4                          --i;
 303   4                      break;
 304   4                  case 1:
 305   4                      if (i < 3 + (option == 3 ? 4 : 0))
 306   4                          ++i;
 307   4                      break;
 308   4                  }
 309   3              }
 310   2          case 5:
 311   2              break;
 312   2          }
 313   1      }
 314          
 315          // -------------------------------------
 316          
 317          bit CheckKeysInvalid()
 318          {
 319   1          uchar old = key;
 320   1          Delay1ms(10);
 321   1          key = 0x0f;
 322   1          key |= KEYS;
 323   1          return key != old;
 324   1      }
 325          
 326          void KeysSystem_1(void)
 327          {
 328   1          KEYS = 0xff;
 329   1          key = 0x0f; // 排除 P33 P32 P31 P30
 330   1          key |= KEYS;
 331   1          switch (key)
 332   1          {
 333   2          case 0x7f: // P37
 334   2          case 0xbf: // P36
 335   2          case 0xdf: // P35
 336   2          case 0xef: // P34
 337   2              if (page == key || CheckKeysInvalid())
 338   2                  return;
 339   2              pressKey = key;
 340   2              break;
 341   2          case 0xff: // 松开 上升沿触发
 342   2              if (pressKey == 0xff || CheckKeysInvalid())
 343   2                  return;
 344   2              page_change = 1;
 345   2              page = pressKey;
 346   2          default:
 347   2              pressKey = 0xff;
 348   2          }
 349   1      }
 350          
 351          void KeysSystem_2(void)
 352          {
 353   1          uchar opt;
 354   1          KEYS = 0xff;
 355   1          key = 0x0f; // 排除 P33 P32 P31 P30
 356   1          key |= KEYS;
 357   1          switch (key)
 358   1          {
 359   2          case 0x7f: // P37
 360   2          case 0xbf: // P36
 361   2          case 0xdf: // P35
 362   2          case 0xef: // P34
 363   2              if (CheckKeysInvalid())
C51 COMPILER V9.60.7.0   ULTIMATE                                                          12/04/2023 07:06:34 PAGE 7   

 364   2                  return;
 365   2              pressKey = key;
 366   2              break;
 367   2          case 0xff: // 松开 上升沿触发
 368   2              if (pressKey == 0xff || CheckKeysInvalid())
 369   2                  return;
 370   2              // 执行按键功能
 371   2              switch (pressKey)
 372   2              {
 373   3              case 0x7f: // P37 进入设置
 374   3                  EA = 0;
 375   3                  pressKey = 0xff;
 376   3                  ChangeSetting();
 377   3                  pressKey = 0xff;
 378   3                  EA = 1;
 379   3                  return;
 380   3              case 0xbf: // P36 下一条
 381   3                  opt = option + 1;
 382   3                  if (opt == SETTING_NUM)
 383   3                      opt = 0;
 384   3                  break;
 385   3              case 0xdf: // P35 上一条
 386   3                  if (!option)
 387   3                      opt = SETTING_NUM - 1;
 388   3                  else
 389   3                      opt = option - 1;
 390   3                  break;
 391   3              case 0xef: // P34 首条
 392   3                  opt = 0;
 393   3              }
 394   2              ShowSettings(opt);
 395   2          default:
 396   2              pressKey = 0xff;
 397   2          }
 398   1      }
 399          
 400          char KeysSystem_3(void)
 401          {
 402   1          KEYS = 0xff;
 403   1          key = 0x0f; // 排除 P33 P32 P31 P30
 404   1          key |= KEYS;
 405   1          if (CheckKeysInvalid())
 406   1              return 0; // 为了稳定的时序，所以在这里消抖
 407   1          switch (key)
 408   1          {
 409   2          // 低电平触发，长按加快变化
 410   2          case 0xbf: // P36 增加
 411   2          case 0xdf: // P35 减少
 412   2              if (pressKey == key)
 413   2              {
 414   3                  if (!changeCount)
 415   3                  {
 416   4                      ++changeCount;
 417   4                      return key == 0xbf ? 1 : -1;
 418   4                  }
 419   3                  if ((++changeCount >= 0x60) && !(changeCount & 0x0f))
 420   3                      return key == 0xbf ? 1 : -1;
 421   3                  if (changeCount == 0xff)
 422   3                      changeCount = 0x5f;
 423   3                  return 0;
 424   3              }
 425   2              else
C51 COMPILER V9.60.7.0   ULTIMATE                                                          12/04/2023 07:06:34 PAGE 8   

 426   2              {
 427   3                  changeCount = 0;
 428   3              }
 429   2          // 上升沿触发
 430   2          case 0x7f: // P37 取消
 431   2          case 0xef: // P34 确定
 432   2              pressKey = key;
 433   2              break;
 434   2          case 0xff: // 松开 上升沿触发
 435   2              if (pressKey == 0xff)
 436   2                  return 0;
 437   2              // 执行按键功能
 438   2              switch (pressKey)
 439   2              {
 440   3              case 0x7f: // P37 取消
 441   3                  pressKey = 0xff;
 442   3                  return -2;
 443   3              case 0xef: // P34 确定
 444   3                  pressKey = 0xff;
 445   3                  return 2;
 446   3              }
 447   2          default:
 448   2              pressKey = 0xff;
 449   2          }
 450   1          return 0;
 451   1      }
 452          
 453          void AboveLimitClock(void)
 454          {
 455   1          if (++hus == 180)
 456   1          {
 457   2              hus = 0;
 458   2              if (++hms == 20)
 459   2              {
 460   3                  hms = 0;
 461   3                  if (++hs == 60)
 462   3                  {
 463   4                      hs = 0;
 464   4                      if (++hm == 60)
 465   4                      {
 466   5                          hm = 0;
 467   5                      }
 468   4                  }
 469   3              }
 470   2          }
 471   1      }
 472          
 473          void BelowLimitClock(void)
 474          {
 475   1          if (++lus == 180)
 476   1          {
 477   2              lus = 0;
 478   2              if (++lms == 20)
 479   2              {
 480   3                  lms = 0;
 481   3                  if (++ls == 60)
 482   3                  {
 483   4                      ls = 0;
 484   4                      if (++lm == 60)
 485   4                      {
 486   5                          lm = 0;
 487   5                      }
C51 COMPILER V9.60.7.0   ULTIMATE                                                          12/04/2023 07:06:34 PAGE 9   

 488   4                  }
 489   3              }
 490   2          }
 491   1      }
 492          
 493          void UpdateOverLimitTimer(bit which) // 1: Above  0: Below
 494          {
 495   1          if (which)
 496   1          {
 497   2              Int8ToString(hm, numStr, 2);
 498   2              Int8ToString(hs, numStr + 3, 2);
 499   2          }
 500   1          else
 501   1          {
 502   2              Int8ToString(lm, numStr, 2);
 503   2              Int8ToString(ls, numStr + 3, 2);
 504   2          }
 505   1          LCD1602_ShowString(numStr);
 506   1          LCD1602_ShowString("m");
 507   1          LCD1602_ShowString(numStr + 3);
 508   1          LCD1602_ShowString(".");
 509   1          if (which)
 510   1              Int8ToString(hms >> 1, numStr, 1);
 511   1          else
 512   1              Int8ToString(lms >> 1, numStr, 1);
 513   1          LCD1602_ShowString(numStr);
 514   1          LCD1602_ShowString("s");
 515   1      }
 516          
 517          void UpdateExtremes(bit which) // 1: Highest  0: Lowest
 518          {
 519   1          FloatToString(which ? highest : lowest, numStr, 5, 1);
 520   1          LCD1602_ShowString(numStr);
 521   1          LCD1602_ShowString(DC);
 522   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1977    ----
   CONSTANT SIZE    =    195    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       3
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
