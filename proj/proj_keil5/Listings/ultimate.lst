C51 COMPILER V9.60.7.0   ULTIMATE                                                          12/02/2023 23:26:20 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE ULTIMATE
OBJECT MODULE PLACED IN .\Objects\ultimate.obj
COMPILER INVOKED BY: E:\Keil C51\C51\BIN\C51.EXE ..\src\ultimate.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\include) DEBUG OBJ
                    -ECTEXTEND PRINT(.\Listings\ultimate.lst) OBJECT(.\Objects\ultimate.obj)

line level    source

   1          #include "ultimate.h"
   2          
   3          #define WELCOME "Welcome to AAUCS"
   4          #define _GROUP_ "      NO.13     "
   5          #define SETTING_NUM 6
   6          
   7          extern uint SHOW_WAIT;
   8          extern bit page_change;
   9          extern char upperLimit, lowerLimit;
  10          extern float temperature;
  11          extern float highest, lowest;
  12          extern uchar fanGear, fanGearStep;
  13          extern uchar hus, hms, hs, hm; // 开机后 超过温度上限 时间
  14          extern uchar lus, lms, ls, lm; // 开机后 低于温度下限 时间
  15          extern uchar key, pressKey, page, option;
  16          extern uchar dsr, ringtone, volume, changeCount;
  17          extern uchar code DC[];
  18          extern uchar numStr[];
  19          
  20          extern _nop_(void);
  21          
  22          void Delay1ms(uint t) // 12MHz
  23          {                     // 软件延迟 参数用uchar 比uint 精准
  24   1          uchar i;
  25   1          while (t--) // mov dec mov jnz orl jz : 8us
  26   1          {
  27   2              i = 142;    // mov : 1us
  28   2              while (--i) // dec mov jz : 4us * 142
  29   2              {
  30   3                  _nop_();
  31   3              } // nop jmp : 3us * 141
  32   2          }     // 每当低位为 0 会多1us处理高位(dec) 忽略
  33   1      } // (8+1+7*142-3)us * t + 6us 约 t ms
  34          
  35          // ============== LCD1602 ==============
  36          
  37          void LCD1602_ShowString(uchar* s)
  38          {
  39   1          while (*s)
  40   1          {
  41   2              LCD1602_WriteData(*s++);
  42   2              Delay1ms(SHOW_WAIT);
  43   2          }
  44   1      }
  45          
  46          void LCD1602_Action(void)
  47          {
  48   1          uchar i;
  49   1          // 开启 LCD1602 显示 (initial)
  50   1          LCD1602_WriteCmd(Set_8bit_2line_5x7);   // 命令6
  51   1          LCD1602_WriteCmd(Show_CursorOff);       // 命令4
  52   1          LCD1602_WriteCmd(Mode_CursorRightMove); // 命令3
  53   1          LCD1602_WriteCmd(Clear_Screen);         // 命令1
  54   1      
C51 COMPILER V9.60.7.0   ULTIMATE                                                          12/02/2023 23:26:20 PAGE 2   

  55   1          // 开机界面
  56   1          LCD1602_WriteCmd(Move_Cursor_Row1_Col(16)); // 命令8 设置光标在显示屏之外
  57   1          LCD1602_ShowString(WELCOME);
  58   1          SHOW_WAIT = 200;
  59   1          LCD1602_WriteCmd(Move_Cursor_Row2_Col(16)); // 命令8
  60   1          LCD1602_WriteCmd(Mode_ScreenRightMove);     // 命令3
  61   1          LCD1602_ShowString(_GROUP_); // 一边输出第二行 一边移动屏幕
  62   1          LCD1602_WriteCmd(Mode_CursorRightMove); // 命令3  恢复光标自增
  63   1      
  64   1          i = 3;
  65   1          do // 闪烁三次
  66   1          {
  67   2              LCD1602_WriteCmd(Show_ScreenOff); // 命令4
  68   2              Delay1ms(SHOW_WAIT * 2);
  69   2              LCD1602_WriteCmd(Show_CursorOff); // 命令4
  70   2              Delay1ms(SHOW_WAIT * 2);
  71   2          } while (--i);
  72   1          i = 16;
  73   1          do
  74   1          {
  75   2              LCD1602_WriteCmd(Shift_ScreenRight); // 命令5
  76   2              Delay1ms(SHOW_WAIT);
  77   2          } while (--i);                  // 字体移出屏幕
  78   1          LCD1602_WriteCmd(Clear_Screen); // 命令1 清屏
  79   1          SHOW_WAIT = 0;
  80   1      } // LCD1602 Action
  81          
  82          void ShowViewPage_1(void)
  83          {
  84   1          // 第一行 温度上限 温度下限
  85   1          LCD1602_WriteCmd(Clear_Screen); // 命令1 清屏
  86   1          LCD1602_ShowString("H:");
  87   1          Int8ToString(upperLimit, numStr, 3);
  88   1          LCD1602_ShowString(numStr);
  89   1          LCD1602_ShowString(DC);
  90   1          LCD1602_ShowString("  L:");
  91   1          Int8ToString(lowerLimit, numStr, 3);
  92   1          LCD1602_ShowString(numStr);
  93   1          LCD1602_ShowString(DC);
  94   1          // 第二行 温度 风扇档位
  95   1          LCD1602_WriteCmd(Move_Cursor_Row2_Col(0));
  96   1          LCD1602_ShowString("T:");
  97   1          FloatToString(temperature, numStr, 5, 1);
  98   1          LCD1602_ShowString(numStr);
  99   1          LCD1602_ShowString(DC);
 100   1          LCD1602_ShowString("  FAN:");
 101   1          Int8ToString(fanGear, numStr, 1);
 102   1          LCD1602_ShowString(numStr);
 103   1      }
 104          
 105          void ShowViewPage_2(void)
 106          {
 107   1          // 第一行 自开机后的最高温
 108   1          LCD1602_WriteCmd(Clear_Screen); // 命令1 清屏
 109   1          LCD1602_ShowString("Highest: ");
 110   1          UpdateExtremes(1);
 111   1          // 第二行 自开机后的最低温
 112   1          LCD1602_WriteCmd(Move_Cursor_Row2_Col(0));
 113   1          LCD1602_ShowString("Lowest:  ");
 114   1          UpdateExtremes(0);
 115   1      }
 116          
C51 COMPILER V9.60.7.0   ULTIMATE                                                          12/02/2023 23:26:20 PAGE 3   

 117          void ShowViewPage_3(void)
 118          {
 119   1          void UpdateOverLimitTimer(bit which);
 120   1          // 第一行 超过温度上限时长
 121   1          LCD1602_WriteCmd(Clear_Screen); // 命令1 清屏
 122   1          LCD1602_ShowString("Above H:");
 123   1          UpdateOverLimitTimer(1);
 124   1          // 第二行 低于温度下限时长
 125   1          LCD1602_WriteCmd(Move_Cursor_Row2_Col(0));
 126   1          LCD1602_ShowString("Below L:");
 127   1          UpdateOverLimitTimer(0);
 128   1      }
 129          
 130          void ShowViewPage_4(void)
 131          {
 132   1          char KeysSystem_3(void);
 133   1          uchar i;
 134   1          LCD1602_WriteCmd(Clear_Screen); // 命令1 清屏
 135   1          // 第一行 温感分辨率 风扇档位步长 (开机音乐?)
 136   1          LCD1602_WriteCmd(Clear_Screen); // 命令1 清屏
 137   1          LCD1602_ShowString("TR: ");
 138   1          LCD1602_WriteData('0' + dsr);
 139   1          LCD1602_ShowString("   FGS: ");
 140   1          LCD1602_WriteData('0' + fanGearStep);
 141   1          LCD1602_ShowString(DC);
 142   1          // LCD1602_ShowString("  M:");
 143   1          // LCD1602_ShowString();
 144   1          // 第二行 音量
 145   1          LCD1602_WriteCmd(Move_Cursor_Row2_Col(0));
 146   1          LCD1602_ShowString("Volume: ");
 147   1          i = 0;
 148   1          while (i < volume)
 149   1          {
 150   2              LCD1602_WriteData(0xff);
 151   2              ++i;
 152   2          }
 153   1      }
 154          
 155          void ShowSettings(uchar opt)
 156          {
 157   1          char i;
 158   1          uchar sgl[2][2] = {{0x7e, 0x7f}, {' ', ' '}};
 159   1          if (opt == option)
 160   1              return;
 161   1          if ((opt >> 1) != (option >> 1))
 162   1          {
 163   2              LCD1602_WriteCmd(Clear_Screen); // 命令1 清屏
 164   2              switch (opt >> 1)
 165   2              {
 166   3              case 0:
 167   3                  // 0 温度上限
 168   3                  LCD1602_WriteCmd(Move_Cursor_Row1_Col(1));
 169   3                  LCD1602_ShowString("H Limit: ");
 170   3                  Int8ToString(upperLimit, numStr, 3);
 171   3                  LCD1602_ShowString(numStr);
 172   3                  LCD1602_ShowString(DC);
 173   3                  // 1 温度下限
 174   3                  LCD1602_WriteCmd(Move_Cursor_Row2_Col(1));
 175   3                  LCD1602_ShowString("L Limit: ");
 176   3                  Int8ToString(lowerLimit, numStr, 3);
 177   3                  LCD1602_ShowString(numStr);
 178   3                  LCD1602_ShowString(DC);
C51 COMPILER V9.60.7.0   ULTIMATE                                                          12/02/2023 23:26:20 PAGE 4   

 179   3                  break;
 180   3              case 1:
 181   3                  // 2 温感分辨率
 182   3                  LCD1602_WriteCmd(Move_Cursor_Row1_Col(1));
 183   3                  LCD1602_ShowString("TResolution: ");
 184   3                  LCD1602_WriteData('0' + dsr);
 185   3                  // 3 风扇档位步长
 186   3                  LCD1602_WriteCmd(Move_Cursor_Row2_Col(1));
 187   3                  LCD1602_ShowString("FGear' Step: ");
 188   3                  LCD1602_WriteData('0' + fanGearStep);
 189   3                  break;
 190   3              case 2:
 191   3                  // 4 开机铃声
 192   3                  LCD1602_WriteCmd(Move_Cursor_Row1_Col(2));
 193   3                  LCD1602_ShowString("Ringtone:  ");
 194   3                  LCD1602_WriteData('0' + ringtone);
 195   3                  // 5 音量
 196   3                  LCD1602_WriteCmd(Move_Cursor_Row2_Col(1));
 197   3                  LCD1602_ShowString("Volume:");
 198   3                  i = 0;
 199   3                  while (i < volume)
 200   3                  {
 201   4                      LCD1602_WriteData(0xff);
 202   4                      ++i;
 203   4                  }
 204   3                  break;
 205   3              }
 206   2          }
 207   1          i = opt & 1;
 208   1          LCD1602_WriteCmd(Move_Cursor_Row1_Col(0));
 209   1          LCD1602_WriteData(sgl[i][0]);
 210   1          LCD1602_WriteCmd(Move_Cursor_Row1_Col(15));
 211   1          LCD1602_WriteData(sgl[i][1]);
 212   1          i = !i;
 213   1          LCD1602_WriteCmd(Move_Cursor_Row2_Col(0));
 214   1          LCD1602_WriteData(sgl[i][0]);
 215   1          LCD1602_WriteCmd(Move_Cursor_Row2_Col(15));
 216   1          LCD1602_WriteData(sgl[i][1]);
 217   1          option = opt;
 218   1      }
 219          
 220          void ChangeSetting(void)
 221          {
 222   1          char i, j;
 223   1          uchar cunt = 24;
 224   1          bit flag = 0;
 225   1          switch (option)
 226   1          {
 227   2          case 0: // 这一段差异性和共性都多，为了节约一点内存，三目运算符 时间换空
             -间
 228   2          case 1: // 这一段逻辑复杂，只用知道是增加/减少上限下限的
 229   2              i = option ? lowerLimit : upperLimit;
 230   2              while (1)
 231   2              {
 232   3                  if (!--cunt)
 233   3                  {
 234   4                      cunt = 24;
 235   4                      flag = !flag;
 236   4                  }
 237   3                  LCD1602_WriteCmd((option ? 0xc0 : 0x80) | 10);
 238   3                  if (flag)
 239   3                      LCD1602_ShowString("   ");
C51 COMPILER V9.60.7.0   ULTIMATE                                                          12/02/2023 23:26:20 PAGE 5   

 240   3                  else
 241   3                  {
 242   4                      Int8ToString(i, numStr, 3);
 243   4                      LCD1602_ShowString(numStr);
 244   4                  }
 245   3                  switch (KeysSystem_3())
 246   3                  {
 247   4                  case 2:
 248   4                      if (option)
 249   4                          lowerLimit = i;
 250   4                      else
 251   4                          upperLimit = i;
 252   4                  case -2: // 可能会因为时序造成空白 所以要
 253   4                      LCD1602_WriteCmd((option ? 0xc0 : 0x80) | 10);
 254   4                      Int8ToString(option ? lowerLimit : upperLimit, numStr, 3);
 255   4                      LCD1602_ShowString(numStr); // 刷新一下数据
 256   4                      return;
 257   4                  case -1:
 258   4                      if (i > -55 && ((i > lowerLimit + 1) || option))
 259   4                          --i;
 260   4                      break;
 261   4                  case 1:
 262   4                      if (i < 127 && ((i < upperLimit - 1) || !option))
 263   4                          ++i;
 264   4                      break;
 265   4                  }
 266   3              }
 267   2          case 4: // 这一部分代码几乎一样，就复用了用来增大/减小选项值
 268   2              i = ringtone; // 0 - 3
 269   2          case 3:
 270   2              if (option == 3)
 271   2                  i = fanGearStep; // 0 - 7
 272   2          case 2:
 273   2              if (option == 2)
 274   2                  i = dsr; // 0 - 3
 275   2              LCD1602_WriteCmd((option & 1 ? 0xc0 : 0x80) | (option == 4 ? 14 : 15));
 276   2              while (1)
 277   2              {
 278   3                  if (!--cunt)
 279   3                  {
 280   4                      cunt = 24;
 281   4                      flag = !flag;
 282   4                  }
 283   3                  if (flag)
 284   3                      j = ' ';
 285   3                  else
 286   3                      j = '0' + i;
 287   3                  LCD1602_WriteCmd(Shift_CursorLeft);
 288   3                  LCD1602_WriteData(j);
 289   3                  switch (KeysSystem_3())
 290   3                  {
 291   4                  case 2:
 292   4                      if (option == 4)
 293   4                          ringtone = i;
 294   4                      else if (option == 3)
 295   4                          fanGearStep = i;
 296   4                      else if (option == 2)
 297   4                          dsr = i;
 298   4                  case -2:
 299   4                      j = option == 4 ? ringtone : (option == 3 ? fanGearStep : dsr);
 300   4                      LCD1602_WriteCmd(Shift_CursorLeft);
 301   4                      LCD1602_WriteData(j + '0');
C51 COMPILER V9.60.7.0   ULTIMATE                                                          12/02/2023 23:26:20 PAGE 6   

 302   4                      return;
 303   4                  case -1:
 304   4                      if (i > 0)
 305   4                          --i;
 306   4                      break;
 307   4                  case 1:
 308   4                      if (i < 3 + (option == 3 ? 4 : 0))
 309   4                          ++i;
 310   4                      break;
 311   4                  }
 312   3              }
 313   2          case 5:
 314   2              break;
 315   2          }
 316   1      }
 317          
 318          // -------------------------------------
 319          
 320          bit CheckKeysInvalid()
 321          {
 322   1          uchar old = key;
 323   1          Delay1ms(10);
 324   1          key = 0x0f;
 325   1          key |= KEYS;
 326   1          return key != old;
 327   1      }
 328          
 329          void KeysSystem_1(void)
 330          {
 331   1          KEYS = 0xff;
 332   1          key = 0x0f; // 排除 P33 P32 P31 P30
 333   1          key |= KEYS;
 334   1          switch (key)
 335   1          {
 336   2          case 0x7f: // P37
 337   2          case 0xbf: // P36
 338   2          case 0xdf: // P35
 339   2          case 0xef: // P34
 340   2              if (page == key || CheckKeysInvalid())
 341   2                  return;
 342   2              pressKey = key;
 343   2              break;
 344   2          case 0xff: // 松开 上升沿触发
 345   2              if (pressKey == 0xff || CheckKeysInvalid())
 346   2                  return;
 347   2              page_change = 1;
 348   2              page = pressKey;
 349   2          default:
 350   2              pressKey = 0xff;
 351   2          }
 352   1      }
 353          
 354          void KeysSystem_2(void)
 355          {
 356   1          uchar opt;
 357   1          KEYS = 0xff;
 358   1          key = 0x0f; // 排除 P33 P32 P31 P30
 359   1          key |= KEYS;
 360   1          switch (key)
 361   1          {
 362   2          case 0x7f: // P37
 363   2          case 0xbf: // P36
C51 COMPILER V9.60.7.0   ULTIMATE                                                          12/02/2023 23:26:20 PAGE 7   

 364   2          case 0xdf: // P35
 365   2          case 0xef: // P34
 366   2              if (CheckKeysInvalid())
 367   2                  return;
 368   2              pressKey = key;
 369   2              break;
 370   2          case 0xff: // 松开 上升沿触发
 371   2              if (pressKey == 0xff || CheckKeysInvalid())
 372   2                  return;
 373   2              // 执行按键功能
 374   2              switch (pressKey)
 375   2              {
 376   3              case 0x7f: // P37 进入设置
 377   3                  EA = 0;
 378   3                  pressKey = 0xff;
 379   3                  ChangeSetting();
 380   3                  pressKey = 0xff;
 381   3                  EA = 1;
 382   3                  return;
 383   3              case 0xbf: // P36 下一条
 384   3                  opt = option + 1;
 385   3                  if (opt == SETTING_NUM)
 386   3                      opt = 0;
 387   3                  break;
 388   3              case 0xdf: // P35 上一条
 389   3                  if (!option)
 390   3                      opt = SETTING_NUM - 1;
 391   3                  else
 392   3                      opt = option - 1;
 393   3                  break;
 394   3              case 0xef: // P34 首条
 395   3                  opt = 0;
 396   3              }
 397   2              ShowSettings(opt);
 398   2          default:
 399   2              pressKey = 0xff;
 400   2          }
 401   1      }
 402          
 403          char KeysSystem_3(void)
 404          {
 405   1          KEYS = 0xff;
 406   1          key = 0x0f; // 排除 P33 P32 P31 P30
 407   1          key |= KEYS;
 408   1          if (CheckKeysInvalid())
 409   1              return 0; // 为了稳定的时序，所以在这里消抖
 410   1          switch (key)
 411   1          {
 412   2          // 低电平触发，长按加快变化
 413   2          case 0xbf: // P36 增加
 414   2          case 0xdf: // P35 减少
 415   2              if (pressKey == key)
 416   2              {
 417   3                  if (!changeCount)
 418   3                  {
 419   4                      ++changeCount;
 420   4                      return key == 0xbf ? 1 : -1;
 421   4                  }
 422   3                  if ((++changeCount >= 0x60) && !(changeCount & 0x0f))
 423   3                      return key == 0xbf ? 1 : -1;
 424   3                  if (changeCount == 0xff)
 425   3                      changeCount = 0x5f;
C51 COMPILER V9.60.7.0   ULTIMATE                                                          12/02/2023 23:26:20 PAGE 8   

 426   3                  return 0;
 427   3              }
 428   2              else
 429   2              {
 430   3                  changeCount = 0;
 431   3              }
 432   2          // 上升沿触发
 433   2          case 0x7f: // P37 取消
 434   2          case 0xef: // P34 确定
 435   2              pressKey = key;
 436   2              break;
 437   2          case 0xff: // 松开 上升沿触发
 438   2              if (pressKey == 0xff)
 439   2                  return 0;
 440   2              // 执行按键功能
 441   2              switch (pressKey)
 442   2              {
 443   3              case 0x7f: // P37 取消
 444   3                  pressKey = 0xff;
 445   3                  return -2;
 446   3              case 0xef: // P34 确定
 447   3                  pressKey = 0xff;
 448   3                  return 2;
 449   3              }
 450   2          default:
 451   2              pressKey = 0xff;
 452   2          }
 453   1          return 0;
 454   1      }
 455          
 456          void AboveLimitClock(void)
 457          {
 458   1          if (++hus == 180)
 459   1          {
 460   2              hus = 0;
 461   2              if (++hms == 20)
 462   2              {
 463   3                  hms = 0;
 464   3                  if (++hs == 60)
 465   3                  {
 466   4                      hs = 0;
 467   4                      if (++hm == 60)
 468   4                      {
 469   5                          hm = 0;
 470   5                      }
 471   4                  }
 472   3              }
 473   2          }
 474   1      }
 475          
 476          void BelowLimitClock(void)
 477          {
 478   1          if (++lus == 180)
 479   1          {
 480   2              lus = 0;
 481   2              if (++lms == 20)
 482   2              {
 483   3                  lms = 0;
 484   3                  if (++ls == 60)
 485   3                  {
 486   4                      ls = 0;
 487   4                      if (++lm == 60)
C51 COMPILER V9.60.7.0   ULTIMATE                                                          12/02/2023 23:26:20 PAGE 9   

 488   4                      {
 489   5                          lm = 0;
 490   5                      }
 491   4                  }
 492   3              }
 493   2          }
 494   1      }
 495          
 496          void UpdateOverLimitTimer(bit which) // 1: Above  0: Below
 497          {
 498   1          if (which)
 499   1          {
 500   2              Int8ToString(hm, numStr, 2);
 501   2              Int8ToString(hs, numStr + 3, 2);
 502   2          }
 503   1          else
 504   1          {
 505   2              Int8ToString(lm, numStr, 2);
 506   2              Int8ToString(ls, numStr + 3, 2);
 507   2          }
 508   1          LCD1602_ShowString(numStr);
 509   1          LCD1602_ShowString("m");
 510   1          LCD1602_ShowString(numStr + 3);
 511   1          LCD1602_ShowString(".");
 512   1          if (which)
 513   1              Int8ToString(hms >> 1, numStr, 1);
 514   1          else
 515   1              Int8ToString(lms >> 1, numStr, 1);
 516   1          LCD1602_ShowString(numStr);
 517   1          LCD1602_ShowString("s");
 518   1      }
 519          
 520          void UpdateExtremes(bit which) // 1: Highest  0: Lowest
 521          {
 522   1          FloatToString(which ? highest : lowest, numStr, 5, 1);
 523   1          LCD1602_ShowString(numStr);
 524   1          LCD1602_ShowString(DC);
 525   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1976    ----
   CONSTANT SIZE    =    195    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       3
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
