C51 COMPILER V9.60.7.0   UTILITY                                                           12/05/2023 15:42:12 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE UTILITY
OBJECT MODULE PLACED IN .\Objects\utility.obj
COMPILER INVOKED BY: D:\install\Keil_v5\C51\BIN\C51.EXE ..\src\utility.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\include) DEB
                    -UG OBJECTEXTEND PRINT(.\Listings\utility.lst) TABS(2) OBJECT(.\Objects\utility.obj)

line level    source

   1          /**
   2           * 作者：李宗霖 日期：2023/12/01
   3           * CSDN昵称：Leisure_水中鱼
   4           * CSDN: https://blog.csdn.net/Supine_0?type=blog
   5           * ----------------------------------------------
   6           * 不加入结束符就可以插入别的字符串中间
   7           * 但是对于单独开空间存储的来说 要么不同长度各自开空间 要么手动加结束符
   8           * 所以出于妥协 添加一个宏来作为编译的这一份代码是否需要自动加入结束符
   9           */
  10          #define uchar unsigned char
  11          #define uint unsigned int
  12          
  13          #define _ADD_END_
  14          
  15          /**
  16           * @param num 需要转换的数字
  17           * @param str 存储字符串的首地址
  18           * @param length 转换后数字可以存放的空间长度
  19           * @param decimal 小数占多少位
  20           */
  21          
  22          void FloatToString(float num, uchar* str, uchar length, uchar decimal)
  23          {
  24   1          char i, mid;
  25   1          uint intn, decn;
  26   1          float dec, std;
  27   1      
  28   1      #ifdef _ADD_END_
  29   1          str[length] = 0; // 字符串结束标志位
  30   1      #endif
  31   1      
  32   1          std = 0.4;
  33   1          // 确定小数点的位置
  34   1          if (decimal != 0)
  35   1          {
  36   2              if (decimal + (num < 0) + 1 > length)
  37   2              {
  38   3                  mid = num < 0;
  39   3                  decimal = length - 1 - (num < 0);
  40   3              }
  41   2              else
  42   2                  mid = length - decimal - 1;
  43   2              str[mid] = '.';
  44   2          }
  45   1          else
  46   1              mid = length;
  47   1      
  48   1          // 五舍六入
  49   1          i = decimal;
  50   1          while (i--)
  51   1              std *= 0.1;
  52   1      
  53   1          // 分离整数和小数部分
  54   1          if (num < 0)
C51 COMPILER V9.60.7.0   UTILITY                                                           12/05/2023 15:42:12 PAGE 2   

  55   1          {
  56   2              num -= std;
  57   2              intn = -(int)num;
  58   2              dec = (int)num - num;
  59   2          }
  60   1          else
  61   1          {
  62   2              num += std;
  63   2              intn = (int)num;
  64   2              dec = num - intn;
  65   2          }
  66   1      
  67   1          // 处理小数部分
  68   1          for (i = mid + 1; i < length; ++i)
  69   1          {
  70   2              dec *= 10;
  71   2              decn = (uchar)dec;
  72   2              str[i] = decn + '0';
  73   2              dec -= decn;
  74   2          }
  75   1          // 处理整数部分
  76   1          for (i = mid - 1; i > 0; --i)
  77   1          {
  78   2              str[i] = intn % 10 + '0';
  79   2              intn /= 10;
  80   2              if (intn == 0)
  81   2              {
  82   3                  --i;
  83   3                  break;
  84   3              }
  85   2          }
  86   1          str[i] = num < 0 ? '-' : (intn == 0 && mid != 1 ? ' ' : intn % 10 + '0');
  87   1          while (i-- > 0)
  88   1              str[i] = ' ';
  89   1      }
  90          
  91          void Int8ToString(char num, uchar* str, uchar length)
  92          {
  93   1          bit neg;
  94   1      
  95   1      #ifdef _ADD_END_
  96   1          str[length] = 0; // 字符串结束标志位
  97   1      #endif
  98   1      
  99   1          neg = num < 0;
 100   1          if (!length)
 101   1              return;
 102   1          if (neg)
 103   1          {
 104   2              if (!--length)
 105   2                  return;
 106   2              ++str;
 107   2              num = ~num;
 108   2              ++num;
 109   2          }
 110   1          str[--length] = num % 10 + '0';
 111   1          while (length)
 112   1          {
 113   2              num /= 10;
 114   2              if (!num)
 115   2                  break;
 116   2              str[--length] = num % 10 + '0';
C51 COMPILER V9.60.7.0   UTILITY                                                           12/05/2023 15:42:12 PAGE 3   

 117   2          }
 118   1          if (neg)
 119   1          {
 120   2              --str;
 121   2              if (!length)
 122   2                  *str = '-';
 123   2              str[length] = '-';
 124   2          }
 125   1          while (length)
 126   1              str[--length] = ' ';
 127   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    861    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      28
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
