C51 COMPILER V9.60.7.0   DS18B20                                                           12/02/2023 08:26:10 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN .\Objects\ds18b20.obj
COMPILER INVOKED BY: E:\Keil C51\C51\BIN\C51.EXE ..\src\ds18b20.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\include) DEBUG OBJE
                    -CTEXTEND PRINT(.\Listings\ds18b20.lst) OBJECT(.\Objects\ds18b20.obj)

line level    source

   1          #define uchar unsigned char
   2          
   3          #include "ds18b20.h"
   4          
   5          extern void _nop_(void);
   6          
   7          /*
   8          void DS18B20_Delay10us(uchar t) // 延迟t * 10us
   9          {
  10              if (t == 1) return;
  11              t -= 2;
  12              _nop_();
  13              while (t--) { }
  14          }*/
  15          // 6MHz 延迟t * 10us
  16          
  17          // 12MHz 延迟t * 10us
  18          void DS18B20_Delay10us(uchar t)
  19          { // lcall mov ret : 5us
  20   1          uchar i;
  21   1          _nop_(); // nop : 1us
  22   1          if (!--t)
  23   1              return; // dec mov jz : 4us
  24   1          do          // 1+1+6+2 = 10us
  25   1          {
  26   2              _nop_(); // nop : 1us
  27   2              i = 3;   // mov : 1us
  28   2              do
  29   2              {
  30   3              } while (--i); // djnz : 2us
  31   2          } while (--t);     // djnz : 2us
  32   1      } // (t-1)*10us + (5+1+4)us
  33          
  34          // -------------------------------------
  35          
  36          char DS18B20_InitCheck(void)
  37          {
  38   1          char x = 0;
  39   1          DQ = 1; // 复位DQ
  40   1          DQ = 0;
  41   1          DS18B20_Delay10us(60); // 拉低 480~960us
  42   1          DQ = 1;
  43   1          DS18B20_Delay10us(12); // 等待 15~60us 240us之内
  44   1          x = DQ;                // 总线60~240us低电平
  45   1          DQ = 1;                // 释放总线
  46   1          DS18B20_Delay10us(24); // 保证时序完整
  47   1          return x;
  48   1      } // 约 970
  49          
  50          void DS18B20_WriteByte(uchar dat)
  51          {
  52   1          uchar i = 8;
  53   1          do // 串行写8位数据，先写低位后写高位
  54   1          {
C51 COMPILER V9.60.7.0   DS18B20                                                           12/02/2023 08:26:10 PAGE 2   

  55   2              DQ = 0;
  56   2              DS18B20_Delay10us(1); // 至少间隔1us 低于15us
  57   2              DQ = dat & 0x01;      // 写"1" 在15μs内拉高
  58   2              DS18B20_Delay10us(5); // 写"0" 拉低60μs 10+50
  59   2              DQ = 1;
  60   2              dat >>= 1;
  61   2          } while (--i);
  62   1      } // 约 550 (551)
  63          
  64          uchar DS18B20_ReadByte(void)
  65          {
  66   1          uchar i = 8, dat = 0;
  67   1          do // 串行读8位数据，先读低位后读高位
  68   1          {
  69   2              DQ = 0; // 拉低
  70   2              DS18B20_Delay10us(1);
  71   2              DQ = 1; // 15μs内拉高释放总线
  72   2              dat >>= 1;
  73   2              if (DQ)
  74   2                  dat |= 0x80;
  75   2              DS18B20_Delay10us(5); // 最少60us
  76   2          } while (--i);
  77   1          return dat;
  78   1      } // 约 560 (559)
  79          
  80          // -------------------------------------
  81          
  82          void DS18B20_Convert() // 温度转换
  83          {
  84   1          if (DS18B20_InitCheck())
  85   1              return;
  86   1          DS18B20_WriteByte(0xcc);
  87   1          DS18B20_WriteByte(0x44);
  88   1      } // 约 2080 (2076)
  89          
  90          int DS18B20_ReadTemp() // 温度读取
  91          {
  92   1          uchar low = 0, high = 0;
  93   1          int temp = 0;
  94   1          if (DS18B20_InitCheck())
  95   1              return 0;
  96   1          DS18B20_WriteByte(0xcc);
  97   1          DS18B20_WriteByte(0xbe);
  98   1          low = DS18B20_ReadByte();
  99   1          high = DS18B20_ReadByte();
 100   1          temp = (high << 8) | low;
 101   1          return temp;
 102   1      } // 约 3210 (3211)
 103          
 104          // -------------------------------------
 105          
 106          void DS18B20_Set(uchar upperLimit, uchar lowerLimit, uchar resolution)
 107          {
 108   1          if (DS18B20_InitCheck())
 109   1              return;
 110   1          DS18B20_WriteByte(0xcc);
 111   1          DS18B20_WriteByte(0x4e);       // 写暂存器指令4E
 112   1          DS18B20_WriteByte(upperLimit); // 写高速缓存器TH高温限值
 113   1          DS18B20_WriteByte(lowerLimit); // 写高速缓存器TL低温限值
 114   1          DS18B20_WriteByte((resolution << 5) | 0x1f); // 精度设置
 115   1      }
 116          
C51 COMPILER V9.60.7.0   DS18B20                                                           12/02/2023 08:26:10 PAGE 3   

 117          void DS18B20_Get(uchar* upperLimit, uchar* lowerLimit, uchar* resolution)
 118          {
 119   1          if (DS18B20_InitCheck())
 120   1              return;
 121   1          DS18B20_WriteByte(0xcc);
 122   1          DS18B20_WriteByte(0xbe);
 123   1          DS18B20_ReadByte();
 124   1          DS18B20_ReadByte();
 125   1          *upperLimit = DS18B20_ReadByte();
 126   1          *lowerLimit = DS18B20_ReadByte();
 127   1          *resolution = DS18B20_ReadByte();
 128   1          *resolution >>= 5;
 129   1      }
 130          
 131          void DS18B20_Save(void)
 132          {
 133   1          if (DS18B20_InitCheck())
 134   1              return;
 135   1          DS18B20_WriteByte(0xcc);
 136   1          DS18B20_WriteByte(0x48);
 137   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    300    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
