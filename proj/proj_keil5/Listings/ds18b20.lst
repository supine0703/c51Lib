C51 COMPILER V9.60.7.0   DS18B20                                                           12/01/2023 01:42:17 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN .\Objects\ds18b20.obj
COMPILER INVOKED BY: E:\Keil C51\C51\BIN\C51.EXE ..\src\ds18b20.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\include) DEBUG OBJE
                    -CTEXTEND PRINT(.\Listings\ds18b20.lst) OBJECT(.\Objects\ds18b20.obj)

line level    source

   1          #include "ds18b20.h"
   2          
   3          extern void _nop_(void);
   4          
   5          /*
   6          void DS18B20_Delay10us(uchar t) // 延迟t * 10us
   7          {
   8              if (t == 1) return;
   9              t -= 2;
  10              _nop_();
  11              while (t--) { }
  12          }*/
  13          // 6MHz 延迟t * 10us
  14          
  15          // 12MHz 延迟t * 10us
  16          void DS18B20_Delay10us(unsigned char t)
  17          { // lcall mov ret : 5us
  18   1          unsigned char i;
  19   1          _nop_(); // nop : 1us
  20   1          if (!--t)
  21   1              return; // dec mov jz : 4us
  22   1          do          // 1+1+6+2 = 10us
  23   1          {
  24   2              _nop_(); // nop : 1us
  25   2              i = 3;   // mov : 1us
  26   2              do
  27   2              {
  28   3              } while (--i); // djnz : 2us
  29   2          } while (--t);     // djnz : 2us
  30   1      } // (t-1)*10us + (5+1+4)us
  31          
  32          // -------------------------------------
  33          
  34          char DS18B20_InitCheck(void)
  35          {
  36   1          char x = 0;
  37   1          DQ = 1; // 复位DQ
  38   1          DQ = 0;
  39   1          DS18B20_Delay10us(60); // 拉低 480~960us
  40   1          DQ = 1;
  41   1          DS18B20_Delay10us(12); // 等待 15~60us 240us之内
  42   1          x = DQ;                // 总线60~240us低电平
  43   1          DQ = 1;                // 释放总线
  44   1          DS18B20_Delay10us(24); // 保证时序完整
  45   1          return x;
  46   1      }
  47          
  48          void DS18B20_WriteByte(uchar dat)
  49          {
  50   1          unsigned char i = 8;
  51   1          do // 串行写8位数据，先写低位后写高位
  52   1          {
  53   2              DQ = 0;
  54   2              DS18B20_Delay10us(1); // 至少间隔1us 低于15us
C51 COMPILER V9.60.7.0   DS18B20                                                           12/01/2023 01:42:17 PAGE 2   

  55   2              DQ = dat & 0x01;      // 写"1" 在15μs内拉高
  56   2              DS18B20_Delay10us(5); // 写"0" 拉低60μs 10+50
  57   2              DQ = 1;
  58   2              dat >>= 1;
  59   2          } while (--i);
  60   1      }
  61          
  62          unsigned char DS18B20_ReadByte(void)
  63          {
  64   1          unsigned char i = 8, dat = 0;
  65   1          do // 串行读8位数据，先读低位后读高位
  66   1          {
  67   2              DQ = 0; // 拉低
  68   2              DS18B20_Delay10us(1);
  69   2              DQ = 1; // 15μs内拉高释放总线
  70   2              dat >>= 1;
  71   2              if (DQ)
  72   2                  dat |= 0x80;
  73   2              DS18B20_Delay10us(5); // 最少60us
  74   2          } while (--i);
  75   1          return dat;
  76   1      }
  77          
  78          // -------------------------------------
  79          
  80          void DS18B20_Convert() // 温度转换
  81          {
  82   1          if (DS18B20_InitCheck())
  83   1              return;
  84   1          DS18B20_WriteByte(0xcc);
  85   1          DS18B20_WriteByte(0x44);
  86   1      }
  87          
  88          int DS18B20_ReadTemp() // 温度读取
  89          {
  90   1          unsigned char low = 0, high = 0;
  91   1          int temp = 0;
  92   1          if (DS18B20_InitCheck())
  93   1              return 0;
  94   1          DS18B20_WriteByte(0xcc);
  95   1          DS18B20_WriteByte(0xbe);
  96   1          low = DS18B20_ReadByte();
  97   1          high = DS18B20_ReadByte();
  98   1          temp = (high << 8) | low;
  99   1          return temp;
 100   1      }
 101          
 102          // -------------------------------------
 103          
 104          void DS18B20_Set(
 105              unsigned char upperLimit, unsigned char lowerLimit, unsigned char resolution
 106          )
 107          {
 108   1          if (DS18B20_InitCheck())
 109   1              return;
 110   1          DS18B20_WriteByte(0xcc);
 111   1          DS18B20_WriteByte(0x4e);       // 写暂存器指令4E
 112   1          DS18B20_WriteByte(upperLimit); // 写高速缓存器TH高温限值
 113   1          DS18B20_WriteByte(lowerLimit); // 写高速缓存器TL低温限值
 114   1          DS18B20_WriteByte(resolution); // 精度设置
 115   1      }
 116          
C51 COMPILER V9.60.7.0   DS18B20                                                           12/01/2023 01:42:17 PAGE 3   

 117          void DS18B20_Get(
 118              unsigned char* upperLimit,
 119              unsigned char* lowerLimit,
 120              unsigned char* resolution
 121          )
 122          {
 123   1          if (DS18B20_InitCheck())
 124   1              return;
 125   1          DS18B20_WriteByte(0xcc);
 126   1          DS18B20_WriteByte(0xbe);
 127   1          DS18B20_ReadByte();
 128   1          DS18B20_ReadByte();
 129   1          *upperLimit = DS18B20_ReadByte();
 130   1          *lowerLimit = DS18B20_ReadByte();
 131   1          *resolution = DS18B20_ReadByte();
 132   1          *resolution >>= 5;
 133   1      }
 134          
 135          void DS18B20_Save(void)
 136          {
 137   1          if (DS18B20_InitCheck())
 138   1              return;
 139   1          DS18B20_WriteByte(0xcc);
 140   1          DS18B20_WriteByte(0x48);
 141   1          DQ = 1;
 142   1          DS18B20_Delay10us(200);
 143   1          DS18B20_Delay10us(200);
 144   1          DS18B20_Delay10us(200);
 145   1          DS18B20_Delay10us(200);
 146   1          DS18B20_Delay10us(200);
 147   1          DS18B20_Delay10us(200);
 148   1          DS18B20_Delay10us(200);
 149   1          DS18B20_Delay10us(200);
 150   1          DS18B20_Delay10us(200);
 151   1          DS18B20_Delay10us(200);
 152   1      }
 153          
 154          void DS18B20_Update()
 155          {
 156   1          uchar dat;
 157   1          if (DS18B20_InitCheck())
 158   1              return;
 159   1          DS18B20_WriteByte(0xcc);
 160   1          DS18B20_WriteByte(0xb8);
 161   1          dat = DS18B20_ReadByte();
 162   1          while (!(dat | 0))
 163   1          {
 164   2              dat = DS18B20_ReadByte();
 165   2          }
 166   1      }
 167          
 168          // void DS18B20_CheckAlarm()
 169          // {
 170          //     uchar dat;
 171          //     if (DS18B20_InitCheck())
 172          //         return;
 173          //     DS18B20_WriteByte(0xec);
 174          //     DS18B20_WriteByte(0xec);
 175          //     dat = DS18B20_ReadByte();
 176          //     while (!(dat | 0))
 177          //     {
 178          //     }
C51 COMPILER V9.60.7.0   DS18B20                                                           12/01/2023 01:42:17 PAGE 4   

 179          // }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    351    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
