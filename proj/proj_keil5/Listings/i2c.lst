C51 COMPILER V9.60.7.0   I2C                                                               12/05/2023 14:57:23 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\Objects\i2c.obj
COMPILER INVOKED BY: D:\install\Keil_v5\C51\BIN\C51.EXE ..\src\i2c.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\include) DEBUG O
                    -BJECTEXTEND PRINT(.\Listings\i2c.lst) TABS(2) OBJECT(.\Objects\i2c.obj)

line level    source

   1          /**
   2           * 作者：李宗霖 日期：2023/12/04
   3           * CSDN昵称：Leisure_水中鱼
   4           * CSDN: https://blog.csdn.net/Supine_0?type=blog
   5           * ----------------------------------------------
   6           * - 此头文件对文件：'__config__.h' 强依赖
   7           * - 数据端口 控制端口 需要通过'__config__.h'配置 SDA SCL
   8           * ----------------------------------------------
   9           */
  10          #include "__config__.h"
  11          #ifdef I2C_USE_DEFAULT
              #include <REG52.H>
              #undef I2C_DEFINE_SDA
              #undef I2C_DEFINE_SCL
              #define I2C_DEFINE_SDA P1 ^ 7
              #define I2C_DEFINE_SCL P1 ^ 6
              #endif
  18          
  19          sbit SDA = I2C_DEFINE_SDA;
  20          sbit SCL = I2C_DEFINE_SCL;
  21          
  22          #ifndef uchar
  23          #define uchar unsigned char
  24          #endif
  25          
  26          extern void _nop_(void);
  27          
  28          void I2C_Wait(void) // 4us
  29          {
  30   1      }
  31          
  32          bit I2C_CheckAck(void)
  33          {
  34   1          bit flg;
  35   1          SDA = 1;
  36   1          I2C_Wait();
  37   1          SCL = 1;
  38   1          I2C_Wait();
  39   1          flg = SDA;
  40   1          SCL = 0;
  41   1          return !flg;
  42   1      }
  43          
  44          void I2C_Start(void)
  45          {
  46   1          SCL = 1;
  47   1          SDA = 1;
  48   1          _nop_();
  49   1          I2C_Wait(); // 5us
  50   1          SDA = 0;
  51   1          _nop_();
  52   1          I2C_Wait(); // 5us
  53   1          SCL = 0;
  54   1      }
C51 COMPILER V9.60.7.0   I2C                                                               12/05/2023 14:57:23 PAGE 2   

  55          
  56          void I2C_Stop(void)
  57          {
  58   1          SDA = 0;
  59   1          SCL = 1;
  60   1          _nop_();
  61   1          I2C_Wait(); // 5us
  62   1          SDA = 1;
  63   1          _nop_();
  64   1          I2C_Wait(); // 5us
  65   1      }
  66          
  67          void I2C_Init(void)
  68          {
  69   1          SCL = 1;
  70   1          _nop_();
  71   1          SDA = 1;
  72   1          _nop_();
  73   1          I2C_Wait();
  74   1          I2C_Stop();
  75   1      }
  76          
  77          void I2C_Ack(void)
  78          {
  79   1          SDA = 0;
  80   1          I2C_Wait();
  81   1          SCL = 1;
  82   1          I2C_Wait();
  83   1          SCL = 0;
  84   1          I2C_Wait();
  85   1          SDA = 1;
  86   1          _nop_();
  87   1      }
  88          
  89          void I2C_NoAck(void)
  90          {
  91   1          SDA = 1;
  92   1          I2C_Wait();
  93   1          SCL = 1;
  94   1          I2C_Wait();
  95   1          SCL = 0;
  96   1          I2C_Wait();
  97   1          SDA = 0;
  98   1          _nop_();
  99   1      }
 100          
 101          void I2C_SendByte(uchar dat)
 102          {
 103   1          uchar i;
 104   1          SCL = 0;
 105   1          for (i = 8; i; --i)
 106   1          {
 107   2              SDA = (bit)(dat & 0x80);
 108   2              SCL = 1;
 109   2              I2C_Wait();
 110   2              SCL = 0;
 111   2              dat <<= 1;
 112   2          }
 113   1          SDA = 1;
 114   1      }
 115          
 116          uchar I2C_RecByte(void)
C51 COMPILER V9.60.7.0   I2C                                                               12/05/2023 14:57:23 PAGE 3   

 117          {
 118   1          uchar i, dat;
 119   1          SDA = 1;
 120   1          for (i = 8; i; --i)
 121   1          {
 122   2              dat <<= 1;
 123   2              SCL = 0;
 124   2              I2C_Wait();
 125   2              SCL = 1;
 126   2              I2C_Wait();
 127   2              dat |= SDA;
 128   2          }
 129   1          SCL = 0;
 130   1          I2C_Wait();
 131   1          return dat;
 132   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    140    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
